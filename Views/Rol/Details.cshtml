@*@model tallerbiblioteca.Models.Rol*@
    @model tallerbiblioteca.Models.ConfiguracionViewModel

@{
    ViewData["Title"] = "Details";
}

<h1>Detalles</h1>

<div>
    <h4>Rol</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Rol.Nombre)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Rol.Nombre)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Rol.Estado)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Rol.Estado)
        </dd>
    </dl>
</div>
<div>
    <ul>
        @if (Model.Configuraciones.Count > 0) {
            <h6>Permisos</h6>
            @foreach (var configuracion in Model.Configuraciones)
            {
            <li>
                
                @if (configuracion.Permiso != null)
                {
                    //esto nos permitira cambiar el color de la letra dependiendo del estado del permiso
                     <span>
                        @configuracion.Permiso.Nombre, Estado: 
                        <span style="color: @(configuracion.Estado == "INACTIVO" ? "red" : "green")">
                            @configuracion.Estado
                        </span>
                    </span>
                }
                else
                {
                    <span>Permiso no disponible, Estado: @{if(@configuracion.Estado =="ACTIVO"){<span class="text-error"> @configuracion.Estado</span>}} @configuracion.Estado</span>
                }
            </li>
        }
        } else
        {
            <li><h3>no hay configuraciones asociadas </h3></li>
        }

    </ul>
</div>
<div>
    <a asp-action="Editar" class="boton medium" asp-route-id="@Model?.Rol.Id">Edit</a> 
    <a asp-action="Index" class="botonDelete Deletemedium">Regresar</a>
</div>
