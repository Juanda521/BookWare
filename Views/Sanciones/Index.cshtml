@* @model IEnumerable<tallerbiblioteca.Models.Sancion> *@
    @model tallerbiblioteca.Models.Paginacion<Sancion>
@using System.Security.Claims;
@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<div class="row">
    <div class="col-md-4">
        <p>
            <a class="boton medium" asp-action="Create">  Registrar </a>
        </p>
    </div>

    <div class="col-4">
        <form asp-action="Index">
            <p>
                <input type="text" name="busqueda" placeholder="Id sancion" class="form-control" />
                <button type="submit" class="ms-4 mt-1 boton medium  " value="Buscar">Buscar</button>
            </p>
        </form>
    </div>

    <div class="col-md-4 pt-2">
        <h1 class="fw-bold text-center pt-4">Saciones</h1>
    </div>

</div>



<table>
    <thead>
        <tr>
            <th>
               
                Devolucion
            </th>
            <th>
                
                Nombre estudiante
            </th>
            <th>
                
                Motivo Sancion
            </th>
            <th>
                
                Fecha Sancion
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Items) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Devolucion.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Devolucion.Prestamo.Peticion.Usuario.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Motivo_sancion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Fecha_Sancion)
            </td>
            <td>

                    @if (User.FindFirst(ClaimTypes.Role)?.Value == "1")
                    {
                        <button class="boton medium" type="submit">
                            <a asp-action="Edit" asp-route-id="@item.Id">Editar</a>
                        </button>

                        <button class="boton medium" type="submit">
                            <a asp-action="Details" asp-route-id="@item.Id">Detalles</a>
                        </button>

                        <button class="boton medium" type="submit">
                            <a asp-action="Delete" asp-route-id="@item.Id">Quitar sancion</a>
                        </button>
                    }
                    
            </td>
        </tr>
}
    </tbody>
</table>
<div class="text-center ms-5 ps-5">
    <nav aria-label="Page navigation">
        <ul class="pagination">
            <li class="page-item @(Model.Numero_pagina == 1 ? "disabled" : "")">
                <a class="page-link text-dark" href="?pagina=1&busqueda=@Context.Request.Query["busqueda"]">Primera</a>
            </li>
            @for (var i = 1; i <= Model.TotalItems; i++)
            {
                <li class="page-item  @(Model.Numero_pagina == i ? "active" : "") ">
                    <a class=" page-link bg-success text-dark" href="?pagina=@i&busqueda=@Context.Request.Query["busqueda"]">@i</a>
                </li>
            }
            <li class="page-item @(Model.Numero_pagina == Model.TotalItems ? "disabled" : "")">
                <a class="page-link text-dark" href="?pagina=@Model.TotalItems&busqueda=@Context.Request.Query["busqueda"]">Ultima</a>
            </li>
        </ul>
    </nav>
</div>
@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    @{
        var Mensaje = TempData["Mensaje"] as string;

        if (Mensaje != null)
        {
            var mensaje = Newtonsoft.Json.JsonConvert.DeserializeObject<ResponseModel>(Mensaje);
            <script>
                const cuerpo = `@Html.Raw(Newtonsoft.Json.JsonConvert.ToString(mensaje.Mensaje))`;
                const icono = "@mensaje.Icono";
                MostrarMensajeUsuarios(icono, cuerpo);
            </script>

        }

    }

}
