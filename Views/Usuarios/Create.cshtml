@using System.Security.Claims;
@model tallerbiblioteca.Models.Usuario

@{
    ViewData["Title"] = "Crear Usuario";
}
<div class="d-flex justify-content-center">
    <div class="card shadow-lg p-3 mb-5 bg-white rounded" style="width: 50%; font-size: 0.9em;">
        <div class="card-body">
        <h1 class="card-title text-center">Crear usuario</h1>
        <hr/>
            <form asp-action="Create" id="formulario">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                @if ((User.FindFirst(ClaimTypes.Role)?.Value == "1") || (User.FindFirst(ClaimTypes.Role)?.Value == "3"))
                {
                    <div class="form-group">
                        <label asp-for="Id_rol" class="control-label required"></label>
                        <select asp-for="Id_rol" class="form-control" asp-items="ViewBag.Id_rol"></select>
                    </div>
                }
                else
                {
                    <input asp-for="Id_rol" type="hidden" value="02" />
                }
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label fw-bold required ">Número de documento</label>
                            <input asp-for="Numero_documento" class="form-control" oninput="validarEspacios(this)" />
                            <span asp-validation-for="Numero_documento" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Apellido" class="control-label fw-bold required"></label>
                            <input asp-for="Apellido" class="form-control" oninput="validarEspacios(this)" />
                            <span asp-validation-for="Apellido" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label fw-bold required">Nombre</label>
                            <input asp-for="Name" class="form-control" oninput="validarEspacios(this)" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Contraseña" class="control-label fw-bold required"></label>
                            <div class="input-group">
                                <input asp-for="Contraseña" type="password" class="form-control" id="Contraseña" oninput="validarEspacios(this)" />
                                <span class ="input-group-text" id="togglePassword">
                                    <i class="fas fa-eye"></i>
                                </span>
                            </div>
                            <span asp-validation-for="Contraseña" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label asp-for="Correo " class="control-label fw-bold required"></label>
                    <input asp-for="Correo" class="form-control" oninput="validarEspacios(this)" />
                    <span asp-validation-for="Correo" class="text-danger"></span>
                </div>
                <input asp-for="Estado" type="hidden" value="ACTIVO" />
                <div class="mt-3 text-center" style="display: flex; justify-content: center;">
                    <button class="button" type="submit" style="margin-right: 10px;">Registrar</button>
                    <a class="Eliminar" asp-action="Index" style="align-self: center;">Regresar</a>
                </div>

            </form>
            <script>
                window.onload = function () {
                    var inputs = document.getElementsByTagName('input');
                    for (var i = 0; i < inputs.length; i++) {
                        inputs[i].oninput = function () {
                            if (this.value.length > 1) {
                                this.value = this.value.replace(/^ +/, '');
                            }
                        }
                    }
                }
            </script>
            </div>
            </div>
            </div>
@if (ViewData["ApellidoExistente"] != null && ViewData["ApellidoExistente"].ToString() == "True")
{
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            Swal.fire({
                icon: 'error',
                title: 'Apellido Incorrecto',
                text: 'Debes de ingresar bien tu apellido, intenta de nuevo',
                showConfirmButton: true,
            });
        });
    </script>
}
@if (ViewData["NombreExistente"] != null && ViewData["NombreExistente"].ToString() == "True")
{
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            Swal.fire({
                icon: 'error',
                title: 'Nombre Incorrecto',
                text: 'Debes de ingresar todo tu nombre, intenta de nuevo',
                showConfirmButton: true,
            });
        });
    </script>
}
@if (ViewData["Usuariocreado"] != null && ViewData["Usuariocreado"].ToString() == "true")
{
    <script>
        Swal.fire({
            position: 'center',
            icon: 'success',
            title: 'Usuario Creado Con Exito',
            showConfirmButton: false,
            timer: 1500
        }).then(function () {
            window.location.href = '@Url.Action("Index", "Usuarios")';
        });
    </script>
}
@if (ViewData["Nomatriculado"] != null && ViewData["Nomatriculado"].ToString() == "True")
{
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            Swal.fire({
                icon: 'error',
                title: 'Documento Incorrecto',
                text: 'El número de documento que has intentado ingresar no se encuentra matriculado',
                showConfirmButton: true,
            });
        });
    </script>
}
@if (ViewData["Encontrado"] != null && ViewData["Encontrado"].ToString() == "True")
{
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            Swal.fire({
                icon: 'error',
                title: 'Correo electrónico existente',
                text:  'El correo electónico ingresado ya está registrado en el aplicativo, intenta con otro diferente',
                showConfirmButton: true,
            });
        });
    </script>
}
@if (ViewData["Encontrados"] != null && ViewData["Encontrados"].ToString() == "True")
{
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            Swal.fire({
                icon: 'error',
                title: 'Documento incorrecto',
                text: 'El documento ingresado ya se encuentra registrado, intenta con uno diferente',
                showConfirmButton: true,
            });
        });
    </script>
}
@if (ViewData["NoEncontrado"] != null && ViewData["NoEncontrado"].ToString() == "True")
{
    <script>
        Swal.fire({
            position: 'center',
            icon: 'success',
            title: 'Usuario Creado Con Exito',
            showConfirmButton: false,
            timer: 1500
        }).then(function () {
            window.location.href = '@Url.Action("Login", "Usuarios")';
        });
    </script>
}
@if (ViewData["CorreoInvalido"] != null && ViewData["CorreoInvalido"].ToString() == "True")
{
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            Swal.fire({
                icon: 'error',
                title: 'Correo incorrecto',
                text: 'El dominio ingresado no existe, intenta con otro ',
                showConfirmButton: true,
            });
        });
    </script>
}
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        function sendForm(e) {
            e.preventDefault();
            Swal.fire({
                title: 'Quieres guardar los cambios?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'SI'
            }).then((resultado) => {
                if (resultado.isConfirmed) {
                    const formulario = document.getElementById("formulario")
                    formulario.submit();
                }
            })
        }
    </script>
}
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

