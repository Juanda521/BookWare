@* @using tallerbiblioteca.Models.Usuario *@
@model Usuario
@{
    ViewData["Title"] = "Usuarios";
}

    <h1 class="fw-bold fs-1 text-center">Perfil</h1>
<div class="d-flex justify-content-center align-items-center ">
        <div class="card shadow-lg p-3 mb-5 bg-white rounded" style="width: 80%; font-size: 0.9em;">
            <div class="card-body">
                <h1 class="card-title text-center">Datos del usuario</h1>
                <hr />
                <form method="post" asp-action="EditPerfil">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="Id" />
                    <div class="form-group">
                        <label asp-for="Name" class="control-label"></label>
                        <input readonly asp-for="Name" class="form-control" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Apellido" class="control-label"></label>
                        <input readonly asp-for="Apellido" class="form-control" />
                        <span asp-validation-for="Apellido" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Correo" class="control-label"></label>
                    <input asp-for="Correo" class="form-control"  />
                        <span asp-validation-for="Correo" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Numero_documento" class="control-label" ></label>
                        <input asp-for="Numero_documento" class="form-control" readonly />
                        <span asp-validation-for="Numero_documento" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label  class="control-label"> Contraseña </label>
                        @*<input type="hidden" asp-for="Contraseña" class="form-control"/>*@
                        <a class="button mt-2" value="Id" asp-action="EditarContra">Modificar contraseña</a>
                    </div>
                    <div class="mt-3 text-center" style="display: flex; justify-content: center;">
                    <button type="submit" class="editar mt-2">Editar</button>
                        <a class="Eliminar mt-2 ms-2" asp-Controller="Libros" asp-action="Catalog">Cancelar</a>
                    </div>
                </form>
            </div>
        </div>
    </div>
<script>
    // Seleccionamos el input a vigilar
    const correoInput = document.querySelector("input[asp-for='Correo']");

    // Función de validación que se ejecuta al escribir en el input
    correoInput.addEventListener("input", () => {
        correoInput.value = correoInput.value.replace(/\s/g, ""); // Eliminamos cualquier espacio
    });

    // Mensaje de error personalizado
    const correoErrorSpan = document.querySelector("span[asp-validation-for='Correo']");
    correoInput.addEventListener("invalid", () => {
        correoErrorSpan.textContent = "El correo electrónico no puede contener espacios.";
    });
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var correoInput = document.getElementById("Correo");
        var originalCorreoValue = correoInput.value;

        document.querySelector("form").addEventListener("submit", function (e) {
            e.preventDefault(); // Evita que el formulario se envíe automáticamente

            // Verifica si el campo de correo ha sido modificado
            if (correoInput.value !== originalCorreoValue) {
                // Muestra el SweetAlert para confirmar la acción
                Swal.fire({
                    title: "¿Seguro deseas modificar tu correo ?",
                    text: "Recuerda que por medio del correo es por donde te mantendremos informado.",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Sí, continuar",
                    cancelButtonText: "Cancelar"
                }).then((result) => {
                    if (result.isConfirmed) {
                        
                        document.querySelector("form").submit();
                    }
                });
            } else {
                // Si el correo no ha sido modificado, simplemente envía el formulario
                document.querySelector("form").submit();
            }
        });
    });
</script>
@if (ViewData["CorreoExistente"] != null && ViewData["CorreoExistente"].ToString() == "True")
{
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            Swal.fire({
                icon: 'error',
                title: 'Correo electrónico existente',
                text: 'El correo  ya está registrado en el aplicativo, intenta con otro diferente',
                showConfirmButton: true,
            });
        });
    </script>
}
@if (ViewData["CorreoInvalido"] != null && ViewData["CorreoInvalido"].ToString() == "True")
{
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            Swal.fire({
                icon: 'error',
                title: 'Correo incorrecto',
                text: 'El dominio ingresado no existe, intenta con otro ',
                showConfirmButton: true,
            });
        });
    </script>
}
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>